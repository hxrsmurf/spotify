AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: This template deploys a basic Spotify Now Playing tracker to DynamoDB.

Parameters:
  Email:
    Type: String
    Description: Enter the e-mail for error notifications.
  CallbackURL:
    Type: String
    Description: Enter the callback URL

Outputs:
  ClientID:
    Value: !Ref ParameterSpotifyClientID
  ClientSecret:
    Value: !Ref ParameterSpotifyClientSecret
  RefreshToken:
    Value: !Ref ParameterSpotifyRefreshToken
  RedirectUri:
    Value: !Ref CallbackURL
  CurrentTrack:
    Value: !Ref ParameterCurrentTrack
  Table:
    Value: !Ref DynamoDB
  TopicNested:
    Value:
      Fn::GetAtt:
        - StackTopics
        - Outputs.TopicARN
Resources:
  Lambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: python
      Timeout: 15
      Environment:
        Variables:
          PreviousEntryEpochTime: !Ref ParameterPreviousEntryEpochTime
          ParameterSpotifyClientID: !Ref ParameterSpotifyClientID
          ParameterSpotifyClientSecret: !Ref ParameterSpotifyClientSecret
          ParameterSpotifyRefreshToken: !Ref ParameterSpotifyRefreshToken
          CallbackURL: !Ref CallbackURL
          ParameterCurrentTrack: !Ref ParameterCurrentTrack
          Table: !Ref DynamoDB
          Topic:
            Fn::GetAtt:
              - StackTopics
              - Outputs.TopicARN
          RedirectUri: !Ref CallbackURL
      Events:
        EventBridge:
            Type: Schedule
            Properties:
              Schedule: rate(2 minutes)
              Enabled: true
              Name: 'EventBridge'
        PostAPI:
          Type: HttpApi
          Properties:
            Path: /
            Method: POST
        GetAPI:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDB
        - SNSPublishMessagePolicy:
            TopicName:
              Fn::GetAtt:
                - StackTopics
                - Outputs.TopicARN
        - CloudFormationDescribeStacksPolicy: {}
        - Statement:
          - Effect: Allow
            Action:
              - 'ssm:DescribeParameters'
              - 'ssm:GetParameters'
              - 'ssm:GetParameter'
              - 'ssm:PutParameter'
            Resource:
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ParameterSpotifyClientID}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ParameterSpotifyClientSecret}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ParameterSpotifyRefreshToken}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ParameterCurrentTrack}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ParameterPreviousEntryEpochTime}

              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackParameters.Outputs.SpotifyClientID}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackParameters.Outputs.SpotifyClientSecret}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackParameters.Outputs.SpotifyRefreshToken}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackParameters.Outputs.CurrentTrack}
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackParameters.Outputs.PreviousEntryEpochTime}
          - Effect: Allow
            Action:
              - 'events:PutRule'
            Resource:
              - !Sub 'arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/EventBridge'
  DynamoDB:
    Type: 'AWS::Serverless::SimpleTable'
  ParameterSpotifyClientID:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Spotify Client ID
      Tier: Standard
      Type: String
      Value: None
  ParameterSpotifyClientSecret:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Spotify Secret
      Tier: Standard
      Type: String
      Value: None
  ParameterSpotifyRefreshToken:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Spotify Refresh Token
      Tier: Standard
      Type: String
      Value: None
  ParameterCurrentTrack:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Spotify Current Track ID
      Tier: Standard
      Type: String
      Value: None
  ParameterPreviousEntryEpochTime:
    Type: AWS::SSM::Parameter
    Properties:
      Description: DynamoDB Previous Entry's EpochTime
      Tier: Standard
      Type: String
      Value: None

  LambdaReport:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: dynamodb-report
      Timeout: 5
      Environment:
        Variables:
          DynamoDBTable: !Ref DynamoDB
      Events:
        EventBridge:
            Type: Schedule
            Properties:
              Schedule: rate(3 minutes)
              Enabled: false
              Name: 'EventBridgeReport'
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDB

  LambdaMigrateEpoch:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: migrate-epoch
      Timeout: 840
      Environment:
        Variables:
          DynamoDBTable: !Ref DynamoDB
          Topic:
            Fn::GetAtt:
              - StackTopics
              - Outputs.TopicARN
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDB
        - SNSPublishMessagePolicy:
            TopicName:
              Fn::GetAtt:
                - StackTopics
                - Outputs.TopicARN

  LambdaDeleteById:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: dynamodb-delete-by-id
      Timeout: 300
      Environment:
        Variables:
          DynamoDBTable: !Ref DynamoDB
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDB

  LambdaAddYearMonth:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: add-year-month
      Timeout: 840 # 14 minutes
      Environment:
        Variables:
          DynamoDBTable: !Ref DynamoDB
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDB

  LambdaDynamoDBScan:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: dynamodb-query
      Timeout: 120 # 14 minutes
      Environment:
        Variables:
          DynamoDBTable: !Ref DynamoDB
          Bucket: !GetAtt
            - StackBucket
            - Outputs.Bucket
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDB
        - S3CrudPolicy:
            BucketName: !GetAtt
              - StackBucket
              - Outputs.Bucket

  StackTopics:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Email : !Ref Email
      TemplateURL: https://spotify-tracker-sam-stackbucket-t9la7txytz-bucket-17ayxd8l3bm8f.s3.amazonaws.com/topics.yaml

  StackParameters:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://spotify-tracker-sam-stackbucket-t9la7txytz-bucket-17ayxd8l3bm8f.s3.amazonaws.com/parameters.yaml

  StackBucket:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://spotify-tracker-sam-stackbucket-t9la7txytz-bucket-17ayxd8l3bm8f.s3.amazonaws.com/bucket.yaml